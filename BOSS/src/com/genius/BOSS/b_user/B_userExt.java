/*
*Generated by LiuRunze. 2016-04-09 15:08:42
*/
package com.genius.BOSS.b_user;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import org.genius.data.DataConfig;
import org.genius.data.IDataConfig;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.genius.BOSS.b_user.actionbean.*;

public class B_userExt extends B_user{

    public SelectActionBean getWindowData(String id) {
    	SelectActionBean bean = new SelectActionBean();
		DataConfig myData = new DataConfig();
		try {
			myData.openConnection();
			String sql = "select * from table where id="+id;
			ResultSet rs = myData.executeQuery(sql);
			while (rs.next()) {
				/*
				bean.setName(rs.getString("name"));
				*/
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			myData.closeConnection();
		}

		return bean;
    }
    //医生新增页面,级联下拉起始--->获取省份
	public ArrayList area_sInsertSelect() {
		ApplicationContext context = new ClassPathXmlApplicationContext(
				"applicationContext.xml");
		IDataConfig myData = (IDataConfig) context.getBean("dataConfigProxy");
		myData.init();
		ArrayList myList = new ArrayList();
		try {
			myData.openConnection();

			ResultSet rs = myData.executeQuery("select area_id,name from b_area where level_type = '2'");
			while (rs.next()) {
				AreaActionBean areaBean = new AreaActionBean();
				areaBean.setArea_id(rs.getString("area_id"));
				areaBean.setName(rs.getString("name"));
				myList.add(areaBean);
				areaBean = null;
			}
			rs.close();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			myData.closeConnection();
		}
		return myList;
	}
	//医生新增页面，级联下拉--->根据传入的省份获取城市
	public ArrayList areaInsertSelect(String pid) {
		ApplicationContext context = new ClassPathXmlApplicationContext(
				"applicationContext.xml");
		IDataConfig myData = (IDataConfig) context.getBean("dataConfigProxy");
		myData.init();
		ArrayList myList = new ArrayList();
		try {
			myData.openConnection();
            String sql = "select area_id,name from b_area where parent_id = '" + pid + "'";
			ResultSet rs = myData.executeQuery(sql);
			while (rs.next()) {
				AreaActionBean areaBean = new AreaActionBean();
				areaBean.setArea_id(rs.getString("area_id"));
				areaBean.setName(rs.getString("name"));
				myList.add(areaBean);
				areaBean = null;
			}
			rs.close();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			myData.closeConnection();
		}
		return myList;
	}
	//级联下拉，获取医院
	public ArrayList hospitalInsertSelect(String shi) {
		ApplicationContext context = new ClassPathXmlApplicationContext(
				"applicationContext.xml");
		IDataConfig myData = (IDataConfig) context.getBean("dataConfigProxy");
		myData.init();
		ArrayList myList = new ArrayList();
		try {
			myData.openConnection();
			ResultSet rs = myData.executeQuery("select b_hospital.name zhi,b_hospital.name xianshi from b_hospital,(select name city,(select name from b_area ck where ck.area_id = a.parent_id) province from b_area a where a.area_id = '"+shi+"') e where b_hospital.province = e.province and b_hospital.city = e.city");
			while (rs.next()) {
				HospitalActionBean hospitalBean = new HospitalActionBean();
				hospitalBean.setZhi(rs.getString("zhi"));
				hospitalBean.setXianshi(rs.getString("xianshi"));
				myList.add(hospitalBean);
				hospitalBean = null;
			}
			rs.close();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			myData.closeConnection();
		}
		return myList;
	}
	
	//新增页面级联，获取联络员
	public ArrayList liaisonsInsertSelect(String pid) {
		ApplicationContext context = new ClassPathXmlApplicationContext(
				"applicationContext.xml");
		IDataConfig myData = (IDataConfig) context.getBean("dataConfigProxy");
		myData.init();
		ArrayList myList = new ArrayList();
		try {
			myData.openConnection();
            String sql = "select name xianshi,id zhi from b_user where area = '"+pid+"' and role = '5' and status = '0'";
			ResultSet rs = myData.executeQuery(sql);
			while (rs.next()) {
				LiaisonsActionBean liaisonsBean = new LiaisonsActionBean();
				liaisonsBean.setZhi(rs.getString("zhi"));
				liaisonsBean.setXianshi(rs.getString("xianshi"));
				myList.add(liaisonsBean);
				liaisonsBean = null;
			}
			rs.close();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			myData.closeConnection();
		}
		return myList;
	} 
	//根据传入医院，获取该医院科室
	public ArrayList departmentInsertSelect(String pname) {
		ApplicationContext context = new ClassPathXmlApplicationContext(
				"applicationContext.xml");
		IDataConfig myData = (IDataConfig) context.getBean("dataConfigProxy");
		myData.init();
		ArrayList myList = new ArrayList();
		try {
			myData.openConnection();
            String sql = "select name xianshi,name zhi from b_faculty where hospital_id = (select id from b_hospital where name = '"+pname+"')";
             System.out.println(sql);
            ResultSet rs = myData.executeQuery(sql);

			while (rs.next()) {
				DepartmentActionBean departmentBean = new DepartmentActionBean();
				departmentBean.setZhi(rs.getString("zhi"));
				departmentBean.setXianshi(rs.getString("xianshi"));
				myList.add(departmentBean);
				departmentBean = null;
			}
			rs.close();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			myData.closeConnection();
		}
		return myList;
	}

	//编辑页面地区数据填充辅助方法
		public ArrayList areaskSelect(String id) {
			ApplicationContext context = new ClassPathXmlApplicationContext(
					"applicationContext.xml");
			IDataConfig myData = (IDataConfig) context.getBean("dataConfigProxy");
			myData.init();
			ArrayList myList = new ArrayList();
			try {
				myData.openConnection();
	            String sql = "select area_id,name from b_area where id = '" + id + "'";
				ResultSet rs = myData.executeQuery(sql);
				while (rs.next()) {
					AreaActionBean areaBean = new AreaActionBean();
					areaBean.setArea_id(rs.getString("area_id"));
					areaBean.setName(rs.getString("name"));
					myList.add(areaBean);
					areaBean = null;
					
				}
				rs.close();
			} catch (SQLException e) {
				e.printStackTrace();
			} finally {
				myData.closeConnection();
			}
			return myList;
		}
	
}


