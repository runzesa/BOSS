/*
*Generated by GeniusPlatform. 2016-05-06 10:03:56
*/
package com.genius.BOSS.cdsy.action;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.net.URLDecoder;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.genius.data.AdvancedSearchAnalysis;
import org.genius.data.PageDataConfig;
import org.genius.xml.ResponseXml;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.output.Format;
import org.jdom.output.XMLOutputter;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.Controller;

import com.genius.BOSS.cdsy.ICdsy;
import com.genius.BOSS.cdsy.actionbean.*;

public final class SelectAction implements Controller {
	public ModelAndView handleRequest(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {

		HttpSession session = request.getSession();
		
		if (session.getAttribute("login") == null
				|| (!session.getAttribute("login").equals("true"))) {
			Element root = new Element("entity");
			
			Element actionState = new Element("actionState");
			Element fieldState = new Element("field");
			fieldState.setAttribute("name", "state");
			fieldState.setAttribute("value", "noSession");
			actionState.addContent(fieldState);

			root.addContent(actionState);
			Document doc = new Document(root);
			response.setContentType("application/xml;charset=GB2312");
			Format format = Format.getPrettyFormat();
			format.setEncoding("GB2312");
			XMLOutputter outer = new XMLOutputter(format);
			outer.output(doc, response.getWriter());

			return null;
		}
		
		String requestUrl = "";
		
		

		int pageNo;
		String orderType = request.getParameter("ordertype");
		String searchField = request.getParameter("searchfield");
		String searchValue = request.getParameter("searchvalue");
		String searchValuePage = request.getParameter("searchvalue");
		String pager = request.getParameter("pager");
		searchValue=AdvancedSearchAnalysis.adAnalysis(searchField,searchValue);
		
		if(!(searchValuePage==null||searchValuePage.length()<=0)){
			searchValuePage = URLDecoder.decode(searchValuePage,"UTF-8");
		}

		String url = request.getRequestURI() + "?";
		String query = request.getQueryString();
		if (query != null && !query.equals("null")) {
			url = request.getRequestURI() + "?" + query;
		} 

		if (url.indexOf("&order") > 0) {
			url = url.substring(0, url.indexOf("&order"));
		}

		if (orderType == null || orderType.equals("null")) {
			orderType = "false";
		}

		if (request.getParameter("pageNo") != null) {
			pageNo = Integer.valueOf(request.getParameter("pageNo")).intValue();
		} else {
			pageNo = 1;
		}

		ArrayList myList = new ArrayList();
		
		ApplicationContext context = new ClassPathXmlApplicationContext(
				"applicationContext.xml");

		ICdsy cdsy = (ICdsy) context
				.getBean("cdsyProxy");
				
		cdsy.setSId(session.getAttribute("userId").toString());

		try {
		
			myList = cdsy.select(pageNo, request.getParameter("order"), orderType, searchField, searchValue, pager,null);
		
		} catch (NullPointerException e) {
			
			ResponseXml responseXml = new ResponseXml();
			Document doc = responseXml.actionStateResponse("NullPointerException");
			response.setContentType("application/xml;charset=GB2312");
			Format format = Format.getPrettyFormat();
			format.setEncoding("GB2312");
			XMLOutputter outer = new XMLOutputter(format);
			outer.output(doc, response.getWriter());

			return null;
		}
		
		if (myList == null) {
			String[] fields={"id","title","user_id","type","department","operate_state","open_state","score","academic","apply_state","create_user","create_time","audior_name","source","key_word","ucg"};
			ResponseXml responseXml=new ResponseXml();
			Document doc = responseXml.noPowerResponse(fields);
			response.setContentType("application/xml;charset=GB2312");
			Format format = Format.getPrettyFormat();
			format.setEncoding("GB2312");
			XMLOutputter outer = new XMLOutputter(format);
			outer.output(doc, response.getWriter());

			return null;
		}
		
		PageDataConfig myData = new PageDataConfig(cdsy.getTotalSize(),50,
				pageNo);
		String toolBar = myData
				.getImagePageBar(url + requestUrl + "&order="
						+ request.getParameter("order") + "&ordertype="
						+ orderType + "&searchfield=" + searchField
						+ "&searchvalue=" + searchValuePage);
		boolean isOverMax = false;
		if(cdsy.getTotalPageCount()>1)
			isOverMax = true;
			
		Element root = new Element("entity");
		Iterator it = myList.iterator();

		while (it.hasNext()) {
			SelectActionBean bean = (SelectActionBean) it.next();
			Element row = new Element("row");
			
			Element field0 = new Element("field");
			field0.setAttribute("name", "id");
			field0.setAttribute("value", bean.getId()==null?"":bean.getId());
			row.addContent(field0);
			
			Element field1 = new Element("field");
			field1.setAttribute("name", "title");
			field1.setAttribute("value", bean.getTitle()==null?"":bean.getTitle());
			row.addContent(field1);
			
			Element field2 = new Element("field");
			field2.setAttribute("name", "user_id");
			field2.setAttribute("value", bean.getUser_id()==null?"":bean.getUser_id());
			row.addContent(field2);
			
			Element field3 = new Element("field");
			field3.setAttribute("name", "type");
			field3.setAttribute("value", bean.getType()==null?"":bean.getType());
			row.addContent(field3);
			
			Element field4 = new Element("field");
			field4.setAttribute("name", "department");
			field4.setAttribute("value", bean.getDepartment()==null?"":bean.getDepartment());
			row.addContent(field4);
			
			Element field5 = new Element("field");
			field5.setAttribute("name", "operate_state");
			field5.setAttribute("value", bean.getOperate_state()==null?"":bean.getOperate_state());
			row.addContent(field5);
			
			Element field6 = new Element("field");
			field6.setAttribute("name", "open_state");
			field6.setAttribute("value", bean.getOpen_state()==null?"":bean.getOpen_state());
			row.addContent(field6);
			
			Element field7 = new Element("field");
			field7.setAttribute("name", "score");
			field7.setAttribute("value", bean.getScore()==null?"":bean.getScore());
			row.addContent(field7);
			
			Element field8 = new Element("field");
			field8.setAttribute("name", "academic");
			field8.setAttribute("value", bean.getAcademic()==null?"":bean.getAcademic());
			row.addContent(field8);
			
			Element field9 = new Element("field");
			field9.setAttribute("name", "apply_state");
			field9.setAttribute("value", bean.getApply_state()==null?"":bean.getApply_state());
			row.addContent(field9);
			
			Element field10 = new Element("field");
			field10.setAttribute("name", "create_user");
			field10.setAttribute("value", bean.getCreate_user()==null?"":bean.getCreate_user());
			row.addContent(field10);
			
			Element field11 = new Element("field");
			field11.setAttribute("name", "create_time");
			field11.setAttribute("value", bean.getCreate_time()==null?"":bean.getCreate_time());
			row.addContent(field11);
			
			Element field12 = new Element("field");
			field12.setAttribute("name", "audior_name");
			field12.setAttribute("value", bean.getAudior_name()==null?"":bean.getAudior_name());
			row.addContent(field12);
			
			Element field13 = new Element("field");
			field13.setAttribute("name", "source");
			field13.setAttribute("value", bean.getSource()==null?"":bean.getSource());
			row.addContent(field13);
			
			Element field14 = new Element("field");
			field14.setAttribute("name", "key_word");
			field14.setAttribute("value", bean.getKey_word()==null?"":bean.getKey_word());
			row.addContent(field14);
			
			Element field15 = new Element("field");
			field15.setAttribute("name", "ucg");
			field15.setAttribute("value", bean.getUcg()==null?"":bean.getUcg());
			row.addContent(field15);
			
			root.addContent(row);
			bean = null;
		}
		
		Element pageBar = new Element("pageBar");
		Element fieldPage = new Element("field");
		fieldPage.setAttribute("name", "page");
		fieldPage.setAttribute("totalPageCount",String.valueOf(isOverMax));
		fieldPage.setAttribute("value", toolBar);
		pageBar.addContent(fieldPage);
		Element fieldUrl = new Element("field");
		fieldUrl.setAttribute("name", "url");
		fieldUrl.setAttribute("value", url);
		pageBar.addContent(fieldUrl);
		root.addContent(pageBar);
		
		Element actionState = new Element("actionState");
		Element fieldState = new Element("field");
		fieldState.setAttribute("name", "state");
		fieldState.setAttribute("value", "session");
		actionState.addContent(fieldState);
		root.addContent(actionState);
		
		Document doc = new Document(root);
		response.setContentType("application/xml;charset=GB2312");
		Format format = Format.getPrettyFormat();
		format.setEncoding("GB2312");
		XMLOutputter outer = new XMLOutputter(format);
		outer.output(doc, response.getWriter());

		return null;
	}
}
	
